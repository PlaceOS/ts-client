# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4

    - name: Cache node modules
      id: cache
      uses: actions/cache@v4
      with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-

    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
          node-version: '20'

    - name: NPM install
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Test Library
      run: npm run test

    - name: Build Library
      run: npm run build

    - name: Generate Documentation
      run: npm run docs

    - name: Update application version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: npm run semantic-release

    - name: Publish generated content to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4.0.0
      env:
        PERSONAL_TOKEN: ${{ secrets.GH_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./docs
      with:
        emptyCommits: false

    - name: Update Pipeline Chat Status
      uses: fjogeleit/http-request-action@master
      continue-on-error: true
      with:
          url: ${{ secrets.CHAT_SUCCESS }}
          data: '{ "name": "${{ github.repository }}", "commit": "${{ github.sha }}", "pipeline_name": "ts-client", "branch": "${{ github.ref }}", "status": "${{ job.status }}", "url": "https://github.com/${{ github.repository }}/runs/${{ github.run_id }}" }'
      if: ${{ always() }}
